{"ast":null,"code":"var _jsxFileName = \"/Users/nehajadhavsarnaik/Documents/NEHA WORK/MASTERS SUBJECTS /COMPUTER SCIENCE/CS601/Project/neha2/src/components/chats/ChatBox.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport MessageBody from '../messages/Body';\nimport MessageInput from '../messages/MessageInput';\nimport OnTypeSection from '../messages/OnType';\nimport Sidebar from '../sidebar/sidebar';\nexport default class ChatContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initChat = () => {\n      const {\n        socket\n      } = this.props;\n      socket.on('ON_TYPE', this.updateTypingInChat);\n      socket.on('MESSAGE_RECIEVED', this.addMessageToChat);\n      socket.on('FILE_MESSAGE', this.addFileMessageToChat);\n      socket.on('INIT_NEW_CHAT', this.addNEWChat);\n      socket.on('NEW_USER_CONNECTED', this.addNEWUser);\n    };\n\n    this.showThisChat = chatid => {\n      this.setState({\n        currentChat: chatid\n      });\n    };\n\n    this.displaySidebar = () => {\n      console.log('@displaySidebar');\n      const {\n        showSidebar\n      } = this.state;\n      this.setState({\n        showSidebar: !showSidebar\n      });\n    };\n\n    this.addMessageToChat = message => {\n      const {\n        chats\n      } = this.state;\n      console.log('recieved message ', message);\n      console.log(chats);\n      let newchats = chats.map(chat => {\n        if (chat.id === message.currentChat) {\n          chat.messages.push(message);\n        } else {\n          console.log(' id not matched ', message, chat.id, message.currentChat);\n        }\n\n        return chat;\n      });\n      console.log('--------------------------------');\n      console.log(newchats);\n      this.setState({\n        chats: newchats\n      });\n    };\n\n    this.addNEWUser = ({\n      allUsersList\n    }) => {\n      // let {sidebarusers}=this.state\n      console.log('allUsersList ', allUsersList);\n      let communityUser = {\n        name: 'Comunity Chat',\n        id: 1\n      };\n      allUsersList.push(communityUser);\n      allUsersList.reverse();\n      this.setState({\n        sidebarusers: allUsersList\n      });\n    };\n\n    this.addNEWChat = ({\n      id,\n      touser,\n      fromUser\n    }) => {\n      const {\n        listChat,\n        chats\n      } = this.state;\n      let {\n        user\n      } = this.props;\n      console.log('add chat data ', {\n        id,\n        touser,\n        fromUser,\n        user\n      }); // newlistChat=[]\n\n      if (user.id === touser.id && user.id !== fromUser.id) {\n        listChat.push({\n          id: id,\n          userid: fromUser.id\n        });\n        let nchat = {\n          'id': id,\n          'name': fromUser.name,\n          'messages': [],\n          'typingUsers': []\n        };\n        let alreadyExist = false;\n        chats.forEach((el, k) => {\n          if (el.id === id) {\n            console.log('chat is already exist', el);\n            alreadyExist = true;\n            chats[k].id = id;\n          }\n        });\n\n        if (alreadyExist === false) {\n          // push this chat\n          chats.push(nchat);\n        }\n\n        this.setState({\n          listChat: listChat,\n          currentChat: id,\n          chats: chats\n        });\n      } else if (user.id === fromUser.id) {\n        // chat initiator so show the chat for him\n        listChat.push({\n          id: id,\n          userid: touser.id\n        }); // and update the current chat id\n\n        let nchat = {\n          'id': id,\n          'name': touser.name,\n          'messages': [],\n          'typingUsers': []\n        };\n        let alreadyExist = false;\n        chats.forEach((el, k) => {\n          if (el.id === id) {\n            console.log('chat is already exist', el);\n            alreadyExist = true;\n            chats[k].id = id;\n          }\n        });\n\n        if (alreadyExist === false) {\n          // push this chat\n          chats.push(nchat);\n        }\n\n        this.setState({\n          listChat: listChat,\n          currentChat: id,\n          chats: chats\n        });\n      }\n\n      console.log('new list chat', listChat);\n    };\n\n    this.addFileMessageToChat = fileData => {\n      const {\n        chats\n      } = this.state;\n      console.log('recieved file data ', fileData);\n      console.log(chats);\n      let newchats = chats.map(chat => {\n        if (chat.id === fileData.currentChat) {\n          // chat.messages.push(message)\n          fileData.finalFileData.forEach(element => {\n            chat.messages.push(element);\n          });\n        } else {\n          console.log(' id not matched ', chat.id, fileData.currentChat);\n        }\n\n        return chat;\n      });\n      console.log('--------------------------------');\n      console.log(newchats);\n      this.setState({\n        chats: newchats\n      });\n    };\n\n    this.updateTypingInChat = ({\n      currentChat,\n      user,\n      isTyping\n    }) => {\n      console.log('on type', {\n        currentChat,\n        user,\n        isTyping\n      });\n\n      if (user !== this.props.user.name) {\n        const {\n          chats\n        } = this.state;\n        let newchats = chats.map(chat => {\n          if (chat.id === currentChat) {\n            // console.log('kkkkkkkkk')\n            if (isTyping && !chat.typingUsers.includes(user)) {\n              // console.log('ooooooooooo')\n              chat.typingUsers.push(user);\n            } else if (!isTyping && chat.typingUsers.includes(user)) {\n              chat.typingUsers = chat.typingUsers.filter(u => u !== user);\n            } else {// console.log('yyyyyyyyyyyyyyyyy ',isTyping,chat.typingUsers.includes(user))\n            }\n          } else {\n            console.log('chat id not matched with on type data', chat.id, currentChat);\n          }\n\n          return chat;\n        });\n        console.log(newchats);\n        this.setState({\n          chats: newchats\n        });\n      }\n    };\n\n    this.sendMessage = message => {\n      const {\n        socket\n      } = this.props;\n      let {\n        currentChat\n      } = this.state;\n      console.log('send message data ', {\n        message,\n        currentChat\n      });\n      socket.emit(\"MESSAGE\", {\n        message,\n        currentChat\n      });\n    };\n\n    this.sendUploadmsg = fileData => {\n      const {\n        socket\n      } = this.props;\n      console.log('sendUploadmsg');\n      let {\n        currentChat\n      } = this.state;\n      socket.emit('FILE_MESSAGE', {\n        fileData,\n        currentChat\n      });\n    };\n\n    this.sendTyping = isTyping => {\n      const {\n        socket\n      } = this.props;\n      console.log('istypeing data =', {\n        isTyping\n      });\n      let {\n        currentChat\n      } = this.state;\n      socket.emit(\"ON_TYPE\", {\n        isTyping,\n        currentChat\n      });\n    };\n\n    this.sendInitNewChat = cuser => {\n      const {\n        socket\n      } = this.props;\n      console.log('sendInitNewChat data =', {\n        cuser\n      });\n      socket.emit(\"INIT_NEW_CHAT\", cuser);\n    };\n\n    this.showThisChat = chid => {\n      let {\n        currentChat\n      } = this.state;\n\n      if (currentChat !== chid) {\n        currentChat = chid;\n      }\n\n      this.setState({\n        currentChat: currentChat\n      });\n    };\n\n    this.state = {\n      chats: [{\n        'id': 1,\n        'name': 'CommunityChat',\n        'messages': [],\n        'typingUsers': []\n      }],\n      showSidebar: false,\n      currentChat: 1,\n      listChat: [{\n        'id': 1,\n        'userid': 1\n      }],\n      sidebarusers: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('11');\n    const {\n      socket\n    } = this.props;\n    socket.emit('GROUP_CHAT', this.initChat);\n    fetch('http://localhost:3001/users').then(res => res.json()).then(result => {\n      // console.log('11')\n      // console.log('why it is not working ',result)\n      let communityUser = {\n        name: 'Comunity Chat',\n        id: 1\n      };\n      result.users.push(communityUser);\n      result.users.reverse(); // console.log('after ajax users ',result.users)\n\n      this.setState({\n        sidebarusers: result.users\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      user,\n      logout\n    } = this.props;\n    const {\n      chats,\n      showSidebar,\n      currentChat,\n      listChat,\n      sidebarusers\n    } = this.state; // console.log(chat.messages)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CommunityChat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 5\n      }\n    }, chats.map(chat => {\n      return chat.id === currentChat ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Comunitycht\",\n        id: currentChat,\n        key: currentChat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        name: chat.name,\n        displaySidebar: this.displaySidebar,\n        showSidebar: showSidebar,\n        logout: logout,\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ctbx\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chtbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MessageBody, {\n        messages: chat.messages,\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(OnTypeSection, {\n        typingUsers: chat.typingUsers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(MessageInput, {\n        sendMessage: message => {\n          this.sendMessage(message);\n        },\n        sendUploadmsg: fileData => {\n          // console.log('lll')\n          this.sendUploadmsg(fileData);\n        },\n        sendTyping: isTyping => {\n          this.sendTyping(isTyping);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 12\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"userListCont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Sidebar, {\n        newclass: \"userListContainer1\",\n        sendInitNewChat: cuser => {\n          this.sendInitNewChat(cuser);\n        },\n        showChat: chid => {\n          this.showThisChat(chid);\n        },\n        listChat: listChat,\n        iam: user,\n        sidebarusr: sidebarusers,\n        currentChat: currentChat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 12\n        }\n      })), showSidebar ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"userListCont2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Sidebar, {\n        newclass: \"userListContainer2\",\n        sendInitNewChat: cuser => {\n          this.sendInitNewChat(cuser);\n        },\n        showChat: chid => {\n          this.showThisChat(chid);\n        },\n        currentChat: currentChat,\n        listChat: listChat,\n        iam: user,\n        sidebarusr: sidebarusers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 12\n        }\n      })) : '')) : '';\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/nehajadhavsarnaik/Documents/NEHA WORK/MASTERS SUBJECTS /COMPUTER SCIENCE/CS601/Project/neha2/src/components/chats/ChatBox.js"],"names":["React","Component","Header","MessageBody","MessageInput","OnTypeSection","Sidebar","ChatContainer","constructor","props","initChat","socket","on","updateTypingInChat","addMessageToChat","addFileMessageToChat","addNEWChat","addNEWUser","showThisChat","chatid","setState","currentChat","displaySidebar","console","log","showSidebar","state","message","chats","newchats","map","chat","id","messages","push","allUsersList","communityUser","name","reverse","sidebarusers","touser","fromUser","listChat","user","userid","nchat","alreadyExist","forEach","el","k","fileData","finalFileData","element","isTyping","typingUsers","includes","filter","u","sendMessage","emit","sendUploadmsg","sendTyping","sendInitNewChat","cuser","chid","componentDidMount","fetch","then","res","json","result","users","error","render","logout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from './Header'\r\nimport MessageBody from '../messages/Body'\r\nimport MessageInput from '../messages/MessageInput'\r\nimport OnTypeSection from '../messages/OnType'\r\nimport Sidebar from '../sidebar/sidebar'\r\n\r\n\r\nexport default class ChatContainer extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\t\r\n\t\r\n\t  this.state = {\r\n\t  \tchats:[\r\n\t\t\t{\t'id':1,\r\n\t\t\t\t'name':'CommunityChat',\r\n\t\t\t\t'messages':[],\r\n\t\t\t\t'typingUsers':[]\r\n\t\t\t}\r\n\t\t  ],\r\n\t\tshowSidebar:false,\r\n\t\tcurrentChat:1,\r\n\t\tlistChat:[{\t'id':1,\r\n\t\t\t'userid':1,\r\n\t\t}],\r\n\t\tsidebarusers:[]\r\n\r\n\t  };\r\n\r\n\t  \r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('11')\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit('GROUP_CHAT', this.initChat)\r\n\r\n\t\tfetch('http://localhost:3001/users')\r\n\t\t.then(res => res.json())\r\n\t\t.then(\r\n\t\t  (result) => {\r\n\t\t\t// console.log('11')\r\n\t\t\t// console.log('why it is not working ',result)\r\n\t\t\tlet communityUser={name:'Comunity Chat',id:1}\r\n\t\t\tresult.users.push(communityUser)\r\n\t\t\tresult.users.reverse()\r\n\t\t\t// console.log('after ajax users ',result.users)\r\n\t\t\tthis.setState({\r\n\t\t\t\tsidebarusers: result.users\r\n\t\t\t});\r\n\t\t  },\r\n\t\t  (error) => {\r\n\t\t\tthis.setState({\r\n\t\t\t  error\r\n\t\t\t});\r\n\t\t  }\r\n\t\t)\r\n\t}\r\n\r\n\r\n\t\r\n\tinitChat = ()=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.on('ON_TYPE', this.updateTypingInChat)\r\n\t\tsocket.on('MESSAGE_RECIEVED', this.addMessageToChat)\r\n\t\tsocket.on('FILE_MESSAGE', this.addFileMessageToChat)\r\n\t\tsocket.on('INIT_NEW_CHAT', this.addNEWChat)\r\n\t\tsocket.on('NEW_USER_CONNECTED', this.addNEWUser)\r\n\t}\r\n\r\n\tshowThisChat=(chatid)=>{\r\n\t\tthis.setState({currentChat:chatid})\r\n\t}\r\n\t\r\n\tdisplaySidebar=()=>{\r\n\t\tconsole.log('@displaySidebar')\r\n\t\tconst {showSidebar}=this.state\r\n\t\tthis.setState({showSidebar:!showSidebar})\r\n\t}\r\n\r\n\t\r\n\taddMessageToChat = (message)=>{\r\n\t\tconst { chats } = this.state\r\n\t\t\r\n\t\tconsole.log('recieved message ',message)\r\n\t\tconsole.log(chats)\r\n\t\tlet newchats = chats.map((chat)=>{\r\n\t\t\tif(chat.id===message.currentChat){\r\n\t\t\t\tchat.messages.push(message)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tconsole.log(' id not matched ',message, chat.id,message.currentChat)\r\n\t\t\t}\r\n\t\t\treturn chat\r\n\t\t})\r\n\t\tconsole.log('--------------------------------')\r\n\t\tconsole.log(newchats)\r\n\r\n\t\tthis.setState({chats:newchats})\r\n\t}\r\n\r\n\taddNEWUser = ({allUsersList})=>{\r\n\t\t// let {sidebarusers}=this.state\r\n\t\tconsole.log('allUsersList ',allUsersList)\r\n\t\tlet communityUser={name:'Comunity Chat',id:1}\r\n\t\tallUsersList.push(communityUser)\r\n\t\tallUsersList.reverse()\r\n\t\tthis.setState({sidebarusers:allUsersList})\r\n\t}\r\n\taddNEWChat=({id,touser,fromUser})=>{\r\n\t\tconst { listChat ,chats} = this.state\r\n\t\tlet {user}=this.props\r\n\t\tconsole.log('add chat data ',{id,touser,fromUser,user})\r\n\t\t\r\n\t\t// newlistChat=[]\r\n\t\tif(user.id===touser.id && user.id!==fromUser.id){\r\n\t\t\tlistChat.push({id:id,userid:fromUser.id})\r\n\t\t\tlet nchat={\t\r\n\t\t\t\t'id':id,\r\n\t\t\t\t'name':fromUser.name,\r\n\t\t\t\t'messages':[],\r\n\t\t\t\t'typingUsers':[]\r\n\t\t\t}\r\n\t\t\tlet alreadyExist=false\r\n\t\t\tchats.forEach((el,k)=>{\r\n\t\t\t\tif(el.id===id){\r\n\t\t\t\t\tconsole.log('chat is already exist',el)\r\n\t\t\t\t\talreadyExist=true\r\n\t\t\t\t\tchats[k].id=id\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif(alreadyExist===false){\r\n\t\t\t\t// push this chat\r\n\t\t\t\tchats.push(nchat)\r\n\t\t\t}\r\n\t\t\tthis.setState({listChat:listChat,currentChat:id,chats:chats})\r\n\t\t}\r\n\t\telse if(user.id===fromUser.id){\r\n\t\t\t// chat initiator so show the chat for him\r\n\t\t\tlistChat.push({id:id,userid:touser.id})\r\n\t\t\t// and update the current chat id\r\n\t\t\tlet nchat={\t\r\n\t\t\t\t'id':id,\r\n\t\t\t\t'name':touser.name,\r\n\t\t\t\t'messages':[],\r\n\t\t\t\t'typingUsers':[]\r\n\t\t\t}\r\n\t\t\tlet alreadyExist=false\r\n\t\t\tchats.forEach((el,k)=>{\r\n\t\t\t\tif(el.id===id){\r\n\t\t\t\t\tconsole.log('chat is already exist',el)\r\n\t\t\t\t\talreadyExist=true\r\n\t\t\t\t\tchats[k].id=id\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif(alreadyExist===false){\r\n\t\t\t\t// push this chat\r\n\t\t\t\tchats.push(nchat)\r\n\t\t\t}\r\n\t\t\tthis.setState({listChat:listChat,currentChat:id,chats:chats})\r\n\r\n\t\t}\r\n\t\tconsole.log('new list chat', listChat)\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\taddFileMessageToChat=(fileData)=>{\r\n\t\t\r\n\t\tconst { chats } = this.state\r\n\t\t\r\n\t\tconsole.log('recieved file data ',fileData)\r\n\t\tconsole.log(chats)\r\n\t\tlet newchats = chats.map((chat)=>{\r\n\t\t\tif(chat.id===fileData.currentChat){\r\n\t\t\t\t// chat.messages.push(message)\r\n\t\t\t\tfileData.finalFileData.forEach(element => {\r\n\t\t\t\t\tchat.messages.push(element)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tconsole.log(' id not matched ',chat.id,fileData.currentChat)\r\n\t\t\t}\r\n\t\t\treturn chat\r\n\t\t})\r\n\t\tconsole.log('--------------------------------')\r\n\t\tconsole.log(newchats)\r\n\r\n\t\tthis.setState({chats:newchats})\r\n\t}\r\n\r\n\t\r\n\tupdateTypingInChat = ({currentChat,user,isTyping}) =>{\r\n\t\tconsole.log('on type',{currentChat,user,isTyping})\r\n\t\t\tif(user !== this.props.user.name){\r\n\r\n\t\t\t\tconst { chats } = this.state\r\n\t\t\t\tlet newchats=chats.map((chat)=>{\r\n\t\t\t\t\tif(chat.id===currentChat){\r\n\t\t\t\t\t\t// console.log('kkkkkkkkk')\r\n\t\t\t\t\t\tif(isTyping && !chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\t// console.log('ooooooooooo')\r\n\t\t\t\t\t\t\tchat.typingUsers.push(user)\r\n\t\t\t\t\t\t}else if(!isTyping && chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// console.log('yyyyyyyyyyyyyyyyy ',isTyping,chat.typingUsers.includes(user))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tconsole.log('chat id not matched with on type data',chat.id,currentChat )\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn chat\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(newchats)\r\n\t\t\t\tthis.setState({chats:newchats})\r\n\t\t\t\t\r\n\r\n\t\t\t}\r\n\t}\r\n\r\n\t\r\n\tsendMessage = (message)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tlet {currentChat}=this.state\r\n\t\tconsole.log('send message data ',{message,currentChat})\r\n\t\tsocket.emit(\"MESSAGE\", {message,currentChat} )\r\n\t}\r\n\r\n\r\n\tsendUploadmsg= (fileData)=>{\r\n\t\tconst {socket} =this.props\r\n\t\tconsole.log('sendUploadmsg')\r\n\t\tlet {currentChat}=this.state\r\n\t\tsocket.emit('FILE_MESSAGE',{fileData,currentChat})\r\n\t}\r\n\t\r\n\r\n\t\r\n\tsendTyping = (isTyping)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tconsole.log('istypeing data =',{isTyping})\r\n\t\tlet {currentChat}=this.state\r\n\t\tsocket.emit(\"ON_TYPE\", {isTyping,currentChat})\r\n\t}\r\n\r\n\tsendInitNewChat = (cuser)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tconsole.log('sendInitNewChat data =',{cuser})\r\n\t\tsocket.emit(\"INIT_NEW_CHAT\", cuser)\r\n\t}\r\n\r\n\tshowThisChat=(chid)=>{\r\n\t\tlet {currentChat} = this.state\r\n\t\tif(currentChat!==chid){\r\n\t\t\tcurrentChat=chid\r\n\t\t}\r\n\t\tthis.setState({currentChat:currentChat})\r\n\t}\r\n\r\n\t\r\n\trender() {\r\n\t\tconst { user, logout } = this.props\r\n\t\tconst { chats,showSidebar,currentChat,listChat,sidebarusers } = this.state\r\n\t\t// console.log(chat.messages)\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"CommunityChat\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchats.map((chat)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t(chat.id===currentChat)?\r\n\t\t\t\t\t\t\t\t<div className=\"Comunitycht\" id={currentChat} key={currentChat}>\r\n\t\t\t\t\t\t\t\t\t<Header name={chat.name} displaySidebar={this.displaySidebar} showSidebar={showSidebar} logout={logout} user={user} />\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='ctbx'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='chtbox'>\r\n\t\t\t\t\t\t\t\t\t\t\t<MessageBody \r\n\t\t\t\t\t\t\t\t\t\t\t\tmessages={chat.messages}\r\n\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<OnTypeSection typingUsers={chat.typingUsers} />\r\n\t\t\t\t\t\t\t\t\t\t\t<MessageInput \r\n\t\t\t\t\t\t\t\t\t\t\t\tsendMessage={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(message)=>{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.sendMessage(message)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsendUploadmsg={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(fileData)=>{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log('lll')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.sendUploadmsg(fileData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsendTyping={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(isTyping)=>{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.sendTyping(isTyping)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='userListCont'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Sidebar \r\n\t\t\t\t\t\t\t\t\t\t\t\tnewclass='userListContainer1'\r\n\t\t\t\t\t\t\t\t\t\t\t\tsendInitNewChat={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(cuser)=>{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.sendInitNewChat(cuser)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowChat={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(chid)=>{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.showThisChat(chid)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlistChat={listChat}\r\n\t\t\t\t\t\t\t\t\t\t\t\tiam={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsidebarusr={sidebarusers}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentChat={currentChat}\r\n\t\t\t\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t(showSidebar)?\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='userListCont2'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Sidebar \r\n\t\t\t\t\t\t\t\t\t\t\t\tnewclass='userListContainer2'\r\n\t\t\t\t\t\t\t\t\t\t\t\tsendInitNewChat={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(cuser)=>{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.sendInitNewChat(cuser)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowChat={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(chid)=>{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.showThisChat(chid)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentChat={currentChat}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlistChat={listChat}\r\n\t\t\t\t\t\t\t\t\t\t\t\tiam={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsidebarusr={sidebarusers}\r\n\t\t\t\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t:''}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:''\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}